{"name": "test_Orange_Hrm_Login_002", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder='Username']\"}\n  (Session info: chrome-headless-shell=127.0.6533.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7B6F39632+30946]\n\t(No symbol) [0x00007FF7B6EEE3C9]\n\t(No symbol) [0x00007FF7B6DE6FDA]\n\t(No symbol) [0x00007FF7B6E3822C]\n\t(No symbol) [0x00007FF7B6E3850C]\n\t(No symbol) [0x00007FF7B6E7DCB7]\n\t(No symbol) [0x00007FF7B6E5CAAF]\n\t(No symbol) [0x00007FF7B6E7B041]\n\t(No symbol) [0x00007FF7B6E5C813]\n\t(No symbol) [0x00007FF7B6E2A6E5]\n\t(No symbol) [0x00007FF7B6E2B021]\n\tGetHandleVerifier [0x00007FF7B706F83D+1301229]\n\tGetHandleVerifier [0x00007FF7B707BDB7+1351783]\n\tGetHandleVerifier [0x00007FF7B7072A03+1313971]\n\tGetHandleVerifier [0x00007FF7B6F6DD06+245686]\n\t(No symbol) [0x00007FF7B6EF758F]\n\t(No symbol) [0x00007FF7B6EF3804]\n\t(No symbol) [0x00007FF7B6EF3992]\n\t(No symbol) [0x00007FF7B6EEA3EF]\n\tBaseThreadInitThunk [0x00007FF8943A7034+20]\n\tRtlUserThreadStart [0x00007FF8957226A1+33]", "trace": "self = <TestCases.test_OrangeHRM_Login.Test_Orange_HRM object at 0x00000209D6E5E000>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d13fa3e062e74e4e4bf8a6d8ffea8602\")>\n\n    def test_Orange_Hrm_Login_002(self,setup):\n        self.log.critical(\"test_Orange_Hrm_Login_002 is started\")\n        self.driver = setup\n        self.log.info(\"Opening the browser\")\n        self.lp = LoginPage_class(self.driver)\n        time.sleep(2)\n        print(\"Username --> \"+ self.Username)\n        print(\"Password --> \"+ self.Password)\n        # self.driver.find_element(By.XPATH, \"//input[@placeholder='Username']\").send_keys(\"Admin\")\n>       self.lp.Enter_UserName(self.Username)  ## Admin\n\nTestCases\\test_OrangeHRM_Login.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPageObjects\\Login_Page.py:19: in Enter_UserName\n    self.driver.find_element(*LoginPage_class.Text_Username_Xpath).send_keys(username)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000209D70DF200>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7B6EEA3EF]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8943A7034+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF8957226A1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder='Username']\"}\nE         (Session info: chrome-headless-shell=127.0.6533.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7B6F39632+30946]\nE       \t(No symbol) [0x00007FF7B6EEE3C9]\nE       \t(No symbol) [0x00007FF7B6DE6FDA]\nE       \t(No symbol) [0x00007FF7B6E3822C]\nE       \t(No symbol) [0x00007FF7B6E3850C]\nE       \t(No symbol) [0x00007FF7B6E7DCB7]\nE       \t(No symbol) [0x00007FF7B6E5CAAF]\nE       \t(No symbol) [0x00007FF7B6E7B041]\nE       \t(No symbol) [0x00007FF7B6E5C813]\nE       \t(No symbol) [0x00007FF7B6E2A6E5]\nE       \t(No symbol) [0x00007FF7B6E2B021]\nE       \tGetHandleVerifier [0x00007FF7B706F83D+1301229]\nE       \tGetHandleVerifier [0x00007FF7B707BDB7+1351783]\nE       \tGetHandleVerifier [0x00007FF7B7072A03+1313971]\nE       \tGetHandleVerifier [0x00007FF7B6F6DD06+245686]\nE       \t(No symbol) [0x00007FF7B6EF758F]\nE       \t(No symbol) [0x00007FF7B6EF3804]\nE       \t(No symbol) [0x00007FF7B6EF3992]\nE       \t(No symbol) [0x00007FF7B6EEA3EF]\nE       \tBaseThreadInitThunk [0x00007FF8943A7034+20]\nE       \tRtlUserThreadStart [0x00007FF8957226A1+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "e04f791d-be73-45cd-82f2-ed10ec79a706-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "60fc9afb-b480-406a-b210-1391250ec4dd-attachment.txt", "type": "text/plain"}], "start": 1722826988094, "stop": 1722826992014, "uuid": "9c0f37c6-094d-4e1b-a405-d66170f4de17", "historyId": "35ac96d17d7026b2d773015c66047c2b", "testCaseId": "35ac96d17d7026b2d773015c66047c2b", "fullName": "TestCases.test_OrangeHRM_Login.Test_Orange_HRM#test_Orange_Hrm_Login_002", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_OrangeHRM_Login"}, {"name": "subSuite", "value": "Test_Orange_HRM"}, {"name": "host", "value": "DESKTOP-16HA8VL"}, {"name": "thread", "value": "9676-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_OrangeHRM_Login"}]}